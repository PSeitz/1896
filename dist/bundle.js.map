{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 01dc6f2339dbe9f59b04","webpack:///./generate_world.js","webpack:///./main.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","generateWorld","opt","inRange","num","range","world","seaLevel","console","time","cells","forEach","cell","mod","noise","simplex2","x","mapWidth","y","mapHeight","simplex3","data","elevation","temperature","rainfall","drainage","scale","classify","timeEnd","shoreCells","filter","neighbors","getNeighborsWithCell","some","isWater","type","log","length","_","sample","isCity","minDistance","canvasWidth","canvasHeight","cell5","getDistance","maxCities","grid","Array","isReachable","getCellAtXY","easystar","setGrid","setAcceptableTiles","enableSync","cities","groups","addGroup","start","pop","group","push","remove","city","findPath","apply","newCities","maxBy","cityCells","game","City","faker","address","startCell","playerShip","Ship","commerce","productName","player","ships","temperatureToColor","val","Math","round","minTemperatur","maxTemperatur","hex","toString","elevationToColor","rainfallToColor","setupMovie","baseString","frames","textures","PIXI","loader","resources","alert","keys","movie","extras","MovieClip","interactive","animationSpeed","play","openCityMenu","xPos","cellSize","yPos","menu","stage","removeChild","Container","graphics","Graphics","drawCityMenu","click","mouseData","addChild","drawCanvas","animate","renderer","render","requestAnimationFrame","canvas","document","getElementById","width","height","autoDetectRenderer","view","backgroundColor","antialias","resolution","window","devicePixelRatio","autoResize","cocoontext","CONST","TEXT_RESOLUTION","sprites","container","temperatureView","worldView","elevationView","rainFallView","cellTypes","drawTileRaw","color","house","drawHouse","textOptions","fontFamily","fontSize","fill","align","stroke","strokeThickness","lineJoin","text","Text","setXY","anchor","style","webkitFontSmoothing","ship","ship1texture","shipmap","texture","ship1","Sprite","position","loadImagesAndDraw","add","load","Vue","el","money","_generate_world","EasyStar","js","Game","WorldMap","localStorage","JSON","parse","stringify","onload"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.generateWorld = generateWorld;\nfunction generateWorld(opt) {\n    var world = opt.world;\n    var seaLevel = opt.seaLevel;\n    // noise.seed(16);\n    // noise.seed(Math.random());\n    console.time(\"cells\");\n    world.cells.forEach(function (cell) {\n        // cell.data.elevation   = noise.simplex2(cell.x * 10/opt.mapWidth, cell.y * 10/opt.mapHeight)\n        var mod = noise.simplex2(cell.x * 10 / opt.mapWidth, cell.y * 10 / opt.mapHeight);\n        var value = noise.simplex3(cell.x * 2 / opt.mapWidth, cell.y * 2 / opt.mapHeight, mod * cell.y / (opt.mapHeight * 5));\n        cell.data.elevation = value;\n    });\n\n    world.cells.forEach(function (cell) {\n        return cell.data.temperature = noise.simplex2(cell.x / opt.mapWidth, cell.y / opt.mapHeight);\n    }); // very slow change\n    world.cells.forEach(function (cell) {\n        return cell.data.rainfall = noise.simplex2(cell.x * 2 / opt.mapWidth, cell.y * 2 / opt.mapHeight);\n    });\n    world.cells.forEach(function (cell) {\n        return cell.data.drainage = noise.simplex2(cell.x / 20, cell.y / 20);\n    });\n\n    world.cells.forEach(function (cell) {\n        return cell.scale();\n    });\n    world.cells.forEach(function (cell) {\n        return cell.classify(seaLevel);\n    });\n    console.timeEnd(\"cells\");\n\n    function inRange(num, range) {\n        return num >= range[0] && num <= range[1];\n    }\n\n    function placeHouse() {\n        var shoreCells = world.cells.filter(function (cell) {\n            var neighbors = world.getNeighborsWithCell(cell);\n            return inRange(cell.data.elevation, [seaLevel - 0.05, seaLevel]) && neighbors.some(function (cell) {\n                return isWater(cell.type);\n            }) && neighbors.some(function (cell) {\n                return !isWater(cell.type);\n            });\n            // return neighbors.some(cell => (cell.type != \"Water\"))\n            //     && cell.type == \"Water\";\n        });\n\n        console.log(shoreCells.length);\n\n        var _loop = function _loop() {\n            var cell = _.sample(shoreCells);\n            cell.isCity = true;\n            // shoreCells = shoreCells.filter(cell5 => getDistance(cell5, cell)>5)\n            var minDistance = canvasWidth * canvasHeight / 100000;\n            shoreCells.filter(function (cell5) {\n                return getDistance(cell5, cell) < minDistance && cell5 != cell;\n            }).forEach(function (cell) {\n                return cell.isCity = false;\n            });\n        };\n\n        for (var i = 0; i < 250; i++) {\n            _loop();\n        }\n\n        // shoreCells.forEach(cell => cell.isCity=true)\n        // shoreCells.forEach(city => {\n        //     if(world.getNeighborsWithCell(city).some(cell => cell.isCity)){\n        //         let group = world.getNeighborsWithCell(city)\n        //         city.isCity = false\n        //         group.forEach(cell => (cell.isCity=false))\n        //         _.sample(group).isCity = true\n        //     }\n        // })\n    }\n    placeHouse();\n\n    function groupCities() {\n        var cities = world.cells.filter(function (cell) {\n            return cell.isCity;\n        });\n\n        var groups = [];\n        var groupNum = 1;\n\n        var _loop2 = function _loop2() {\n            var start = cities.pop();\n            var group = [];\n            groups.push(group);\n            group.push(start);\n            addGroup = _.remove(cities, function (city) {\n                return easystar.findPath(start.x, start.y, city.x, city.y);\n            });\n\n            Array.prototype.push.apply(group, addGroup);\n        };\n\n        while (cities.length > 0) {\n            var addGroup;\n\n            _loop2();\n        }\n        var newCities = _.maxBy(groups, 'length');\n        groups.forEach(function (group) {\n            if (group != newCities) {\n                group.forEach(function (city) {\n                    return city.isCity = false;\n                });\n            }\n        });\n    }\n    var maxCities = canvasWidth * canvasHeight / 50000;\n    function limitNumCities() {\n        while (world.cells.filter(function (cell) {\n            return cell.isCity;\n        }).length > maxCities) {\n            _.sample(world.cells.filter(function (cell) {\n                return cell.isCity;\n            })).isCity = false;\n        }\n    }\n\n    console.time(\"groupCities\");\n\n    function setPathFindGrid() {\n        var grid = new Array(opt.mapHeight);\n        for (var y = 0; y < opt.mapHeight; y++) {\n            grid[y] = new Array(opt.mapWidth);\n            for (var x = 0; x < opt.mapWidth; x++) {\n                var isReachable = isWater(world.getCellAtXY(x, y).type) || world.getCellAtXY(x, y).isCity;\n                grid[y][x] = isReachable ? 0 : 1;\n            }\n        }\n        easystar.setGrid(grid);\n        easystar.setAcceptableTiles([0]);\n        easystar.enableSync();\n    }\n\n    setPathFindGrid();\n    groupCities();\n    limitNumCities();\n\n    var cityCells = world.cells.filter(function (cell) {\n        return cell.isCity;\n    });\n    cityCells.forEach(function (cell) {\n        game.cities.push(new City(faker.address.city(), cell, 10, world));\n    });\n\n    console.timeEnd(\"groupCities\");\n\n    // Add Ship\n    var startCell = _.sample(cityCells);\n    var playerShip = new Ship(faker.commerce.productName(), 100, 35, startCell, game.player);\n    game.ships.push(playerShip);\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _generate_world = __webpack_require__(0);\n\nvar canvasWidth = 1500;\n\nvar canvasHeight = 800;\nvar mapWidth = 150;\nvar mapHeight = 80;\nvar cellSize = 10;\nvar easystar = new EasyStar.js();\n\nvar game = new Game(new WorldMap(null, mapWidth, mapHeight));\n\n(0, _generate_world.generateWorld)({ world: game.world, seaLevel: 0.2, mapWidth: mapWidth, mapHeight: mapHeight });\n\nif (localStorage['savegame1']) {\n    console.time(\"loadGame\");\n    console.log(\"File Size: \" + localStorage['savegame1'].length / 1000000 + \" mb\");\n    game = JSON.parse(localStorage['savegame1']);\n    console.timeEnd(\"loadGame\");\n} else {\n    console.time(\"generateWorld\");\n    (0, _generate_world.generateWorld)({ world: game.world, seaLevel: 0.2, mapWidth: mapWidth, mapHeight: mapHeight });\n    console.timeEnd(\"generateWorld\");\n    localStorage['savegame1'] = JSON.stringify(game);\n}\n\nvar world = game.world;\n\nwindow.onload = function () {\n    loadImagesAndDraw();\n};\n\n// game = JSON.parse(localStorage['savegame1'])\n// world = game.world\n\nfunction isWater(type) {\n    return type == \"ShallowWater\" || type == \"DeepWater\" || type == \"Water\";\n}\n\nvar sprites = {};\n\nfunction temperatureToColor(value) {\n    var val = Math.round(scale(value, minTemperatur, maxTemperatur, -255, 0)) * -1;\n    var hex = val.toString(16);\n    return '0xFF' + hex + hex;\n}\nfunction elevationToColor(value) {\n    var val = scale(value, -1, 1, -255, 0);\n    var hex = Math.round(val * -1).toString(16);\n    return '0x' + hex + hex + hex;\n}\nfunction rainfallToColor(value) {\n    var val = Math.round(scale(value, -1, 1, -255, 0)) * -1;\n    var hex = val.toString(16);\n    var color = '0x' + hex + hex + 'FF';\n    return color;\n}\n\nfunction setupMovie(baseString) {\n\n    var frames = [];\n    var textures = PIXI.loader.resources[baseString].textures;\n    if (!textures) alert(baseString + \" animation not found\");\n    for (var i = 0; i < Object.keys(textures).length; i++) {\n        frames.push(textures[baseString + i + '.png']);\n    }\n    var movie = new PIXI.extras.MovieClip(frames);\n    movie.interactive = true;\n    movie.animationSpeed = 0.13;\n    movie.play();\n    return movie;\n}\n\nvar stage = new PIXI.Container(0x66FF99, true);\nvar renderer = void 0;\n\nvar menu = null;\n\nfunction closeCityMenu(city) {\n    stage.removeChild(menu);\n}\n\nfunction openCityMenu(city) {\n    var xPos = city.cell.x * cellSize + 20;\n    var yPos = city.cell.y * cellSize - 5;\n    if (menu) {\n        stage.removeChild(menu);\n        if (menu.x == xPos && menu.y == yPos) {\n            // same menu\n            menu = null;\n            return;\n        }\n    }\n    menu = new PIXI.Container();\n    menu.x = xPos;\n    menu.y = yPos;\n\n    var graphics = new PIXI.Graphics();\n    drawCityMenu(graphics, menu);\n\n    var movie = setupMovie('beer');\n    movie.click = function (mouseData) {\n        return alert(\"CLICK Beer\");\n    };\n    menu.addChild(movie);\n    stage.addChild(menu);\n}\n\nfunction drawCanvas() {\n    var canvas = document.getElementById(\"stage\");\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n\n    renderer = new PIXI.autoDetectRenderer(canvasWidth, canvasHeight, {\n        view: canvas, backgroundColor: 0x1099bb, antialias: true,\n        resolution: window.devicePixelRatio || 1,\n        autoResize: true });\n\n    PIXI.cocoontext.CONST.TEXT_RESOLUTION = window.devicePixelRatio;\n\n    function drawCells(world) {\n        var paddingPerSide = 0;\n        sprites.container = new PIXI.Container();\n        sprites.temperatureView = new PIXI.Graphics();\n        sprites.worldView = new PIXI.Graphics();\n        sprites.elevationView = new PIXI.Graphics();\n        sprites.rainFallView = new PIXI.Graphics();\n        for (var i = 0; i < world.cells.length; i++) {\n            var cell = world.cells[i];\n            var x = paddingPerSide + cell.x * cellSize;\n            var y = paddingPerSide + cell.y * cellSize;\n            var type = cellTypes[cell.type];\n            drawTileRaw(sprites.worldView, type.color, cellSize, x, y);\n            drawTileRaw(sprites.temperatureView, temperatureToColor(cell.data.temperature), cellSize, x, y);\n            drawTileRaw(sprites.elevationView, elevationToColor(cell.data.elevation), cellSize, x, y);\n            drawTileRaw(sprites.rainFallView, rainfallToColor(cell.data.rainfall), cellSize, x, y);\n        }\n        sprites.container.addChild(sprites.worldView);\n        stage.addChild(sprites.container);\n\n        game.cities.forEach(function (city) {\n            var house = drawHouse('0xBB3333', Math.round(cellSize * 1.5));\n            house.x = city.cell.x * cellSize;\n            house.y = city.cell.y * cellSize;\n            house.interactive = true;\n            house.click = function (mouseData) {\n                return openCityMenu(city);\n            };\n            stage.addChild(house);\n\n            var textOptions = {\n                fontFamily: 'Arial', // Set style, size and font\n                fontSize: '14px',\n                fill: 'white', // Set fill color to blue\n                align: 'center', // Center align the text, since it's multiline\n                stroke: '#34495e', // Set stroke color to a dark blue-gray color\n                strokeThickness: 3, // Set stroke thickness to 20\n                lineJoin: 'round' // Set the lineJoin to round instead of 'miter'\n            };\n            var text = new PIXI.Text(city.name, textOptions);\n            setXY(text.anchor, 0.5);\n            text.x = city.cell.x * cellSize + 5;\n            if (text.x <= 40) text.anchor.x = .1;\n            if (text.x >= canvasWidth - 40) text.anchor.x = .9;\n            text.y = city.cell.y * cellSize - 5;\n            text.canvas.style.webkitFontSmoothing = \"antialiased\";\n            stage.addChild(text);\n        });\n\n        game.ships.forEach(function (ship) {\n            var ship1texture = PIXI.loader.resources.shipmap.texture;\n            var ship1 = new PIXI.Sprite(ship1texture);\n            ship1.interactive = true;\n            ship1.click = function (mouseData) {\n                alert(\"CLICK Ship!\");\n            };\n            ship1.x = ship.position.x * cellSize;\n            ship1.y = ship.position.y * cellSize;\n            stage.addChild(ship1);\n        });\n\n        // world.cells.filter(cell => cell.isCity).forEach(cell => {\n        // let house = drawHouse('0xBB3333', cellSize*1.5)\n        // house.x = cell.x * cellSize\n        // house.y = cell.y * cellSize\n        // stage.addChild(house);\n\n        // var ship1texture = PIXI.loader.resources.shipmap.texture;\n        // var ship1 = new PIXI.Sprite(ship1texture);\n        // ship1.interactive = true;\n        // ship1.click = function(mouseData){\n        //    alert(\"CLICK!\");\n        // }\n        // ship1.x = cell.x * cellSize\n        // ship1.y = cell.y * cellSize\n        // stage.addChild(ship1);\n        // })\n        //\n        animate();\n    }\n    drawCells(world);\n    renderer.render(stage);\n\n    function animate() {\n        // render the stage container\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    }\n}\n\nfunction andNowDraw(el) {\n    sprites.container.removeChildren();\n    sprites.container.addChild(el);\n    renderer.render(stage);\n}\nfunction showTemperature() {\n    andNowDraw(sprites.temperatureView);\n}\nfunction showMap() {\n    andNowDraw(sprites.worldView);\n}\nfunction showElevation() {\n    andNowDraw(sprites.elevationView);\n}\nfunction showRainFall() {\n    andNowDraw(sprites.rainFallView);\n}\nfunction loadImagesAndDraw() {\n    var loader = PIXI.loader;\n    loader.add(\"ship1\", \"img/shipsmall_1.jpg\").add(\"ship2\", \"img/shipmedium_1.jpg\").add(\"ship3\", \"img/shiplarge_1.jpg\").add(\"shipmap\", \"img/ship_map.png\").add('beer', 'img/beer/beer.json').load(drawCanvas);\n\n    new Vue({\n        el: '#money',\n        data: {\n            money: 'Hello Vue.js!'\n        }\n    });\n}\n\nfunction create2DArray(width, height) {\n    var x = new Array(height);\n    for (var i = 0; i < height; i++) {\n        x[i] = new Array(width);\n    }\n    return x;\n}\n\nfunction inRange(num, range) {\n    return num >= range[0] && num <= range[1];\n}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 01dc6f2339dbe9f59b04","\n\n\nexport function generateWorld(opt){\n    let world = opt.world\n    let seaLevel = opt.seaLevel\n    // noise.seed(16);\n    // noise.seed(Math.random());\n    console.time(\"cells\")\n    world.cells.forEach(cell => {\n        // cell.data.elevation   = noise.simplex2(cell.x * 10/opt.mapWidth, cell.y * 10/opt.mapHeight)\n        var mod = noise.simplex2(cell.x * 10/opt.mapWidth, cell.y * 10/opt.mapHeight);\n        var value = noise.simplex3(cell.x* 2/opt.mapWidth, cell.y* 2/opt.mapHeight, mod * cell.y/(opt.mapHeight*5));\n        cell.data.elevation = value\n    })\n\n    world.cells.forEach(cell => cell.data.temperature = noise.simplex2(cell.x/opt.mapWidth, cell.y/opt.mapHeight)) // very slow change\n    world.cells.forEach(cell => cell.data.rainfall    = noise.simplex2(cell.x * 2/opt.mapWidth, cell.y * 2/opt.mapHeight))\n    world.cells.forEach(cell => cell.data.drainage    = noise.simplex2(cell.x/20, cell.y/20))\n\n    world.cells.forEach(cell => cell.scale())\n    world.cells.forEach(cell => cell.classify(seaLevel))\n    console.timeEnd(\"cells\")\n\n    function inRange(num, range) {\n        return num >= range[0] && num <= range[1]\n    }\n\n    function placeHouse(){\n        let shoreCells = world.cells.filter(cell => {\n            let neighbors = world.getNeighborsWithCell(cell)\n            return inRange(cell.data.elevation, [seaLevel - 0.05, seaLevel])\n                && neighbors.some(cell => isWater(cell.type))\n                && neighbors.some(cell => !isWater(cell.type));\n            // return neighbors.some(cell => (cell.type != \"Water\"))\n            //     && cell.type == \"Water\";\n        } )\n\n        console.log(shoreCells.length)\n        for (var i = 0; i < 250; i++) {\n            let cell = _.sample(shoreCells)\n            cell.isCity=true\n            // shoreCells = shoreCells.filter(cell5 => getDistance(cell5, cell)>5)\n            let minDistance = canvasWidth * canvasHeight  /100000\n            shoreCells.filter(cell5 => (getDistance(cell5, cell)<minDistance && cell5 !=cell)).forEach(cell => (cell.isCity = false))\n        }\n\n        // shoreCells.forEach(cell => cell.isCity=true)\n        // shoreCells.forEach(city => {\n        //     if(world.getNeighborsWithCell(city).some(cell => cell.isCity)){\n        //         let group = world.getNeighborsWithCell(city)\n        //         city.isCity = false\n        //         group.forEach(cell => (cell.isCity=false))\n        //         _.sample(group).isCity = true\n        //     }\n        // })\n    }\n    placeHouse()\n\n\n    function groupCities(){\n        let cities = world.cells.filter(cell => cell.isCity)\n\n        let groups = []\n        let groupNum = 1\n\n        while (cities.length >0) {\n            let start = cities.pop()\n            let group = []\n            groups.push(group)\n            group.push(start)\n            var addGroup = _.remove(cities, city => easystar.findPath(start.x, start.y, city.x, city.y));\n            Array.prototype.push.apply(group, addGroup)\n        }\n        let newCities = _.maxBy(groups, 'length');\n        groups.forEach(group => {\n            if (group!=newCities) {\n                group.forEach(city => (city.isCity = false))\n            }\n        })\n    }\n    let maxCities = canvasWidth * canvasHeight / 50000\n    function limitNumCities(){\n        while (world.cells.filter(cell => cell.isCity).length > maxCities) {\n            _.sample(world.cells.filter(cell => cell.isCity)).isCity = false\n        }\n    }\n\n    console.time(\"groupCities\")\n\n    function setPathFindGrid() {\n        var grid = new Array(opt.mapHeight);\n        for (let y = 0; y < opt.mapHeight; y++) {\n            grid[y] = new Array(opt.mapWidth);\n            for (let x = 0; x < opt.mapWidth; x++) {\n                let isReachable = isWater(world.getCellAtXY(x,y).type) || world.getCellAtXY(x,y).isCity\n                grid[y][x] = isReachable ? 0 : 1\n            }\n        }\n        easystar.setGrid(grid);\n        easystar.setAcceptableTiles([0]);\n        easystar.enableSync();\n    }\n\n    setPathFindGrid()\n    groupCities()\n    limitNumCities()\n\n\n    let cityCells = world.cells.filter(cell => cell.isCity)\n    cityCells.forEach(cell => {\n        game.cities.push(new City(faker.address.city(), cell, 10, world))\n    })\n\n    console.timeEnd(\"groupCities\")\n\n\n    // Add Ship\n    let startCell = _.sample(cityCells)\n    let playerShip = new Ship(faker.commerce.productName(), 100, 35, startCell, game.player)\n    game.ships.push(playerShip)\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./generate_world.js","\n\nlet canvasWidth = 1500;\n\nlet canvasHeight = 800;\nlet mapWidth = 150\nlet mapHeight = 80\nlet cellSize = 10\nvar easystar = new EasyStar.js();\n\nlet game = new Game(new WorldMap(null, mapWidth, mapHeight))\n\nimport {generateWorld} from \"./generate_world.js\"\n\ngenerateWorld({world:game.world, seaLevel: 0.2, mapWidth:mapWidth, mapHeight:mapHeight})\n\nif (localStorage['savegame1']) {\n    console.time(\"loadGame\")\n    console.log(\"File Size: \" + localStorage['savegame1'].length / 1000000 + \" mb\" )\n    game = JSON.parse(localStorage['savegame1'])\n    console.timeEnd(\"loadGame\")\n}else{\n    console.time(\"generateWorld\")\n    generateWorld({world:game.world, seaLevel: 0.2, mapWidth:mapWidth, mapHeight:mapHeight})\n    console.timeEnd(\"generateWorld\")\n    localStorage['savegame1'] = JSON.stringify(game)\n}\n\nlet world = game.world;\n\n\nwindow.onload = function(){\n    loadImagesAndDraw();\n\n};\n\n// game = JSON.parse(localStorage['savegame1'])\n// world = game.world\n\nfunction isWater(type){\n    return type == \"ShallowWater\" || type == \"DeepWater\" || type == \"Water\"\n}\n\nlet sprites = {\n\n}\n\nfunction temperatureToColor(value){\n    let val = Math.round(scale(value,minTemperatur, maxTemperatur, -255, 0)) * -1\n    let hex = val.toString(16)\n    return '0xFF'+hex+hex\n}\nfunction elevationToColor(value){\n    let val = scale(value,-1, 1, -255, 0)\n    let hex = Math.round(val*-1).toString(16)\n    return '0x'+hex+hex+hex\n}\nfunction rainfallToColor(value){\n    let val = Math.round(scale(value, -1 ,1 , -255, 0)) * -1\n    let hex = val.toString(16)\n    let color = '0x'+hex+hex+'FF'\n    return color\n}\n\nfunction setupMovie (baseString){\n\n    var frames = [];\n    let textures = PIXI.loader.resources[baseString].textures\n    if (!textures) alert(baseString +  \" animation not found\")\n    for (var i = 0; i < Object.keys(textures).length; i++) {\n        frames.push(textures[baseString+i+'.png']);\n    }\n    var movie = new PIXI.extras.MovieClip(frames);\n    movie.interactive = true\n    movie.animationSpeed = 0.13\n    movie.play();\n    return movie;\n}\n\nlet stage = new PIXI.Container(0x66FF99, true);\nlet renderer;\n\n\nlet menu = null\n\nfunction closeCityMenu(city){\n    stage.removeChild(menu)\n}\n\nfunction openCityMenu(city){\n    let xPos = city.cell.x * cellSize + 20\n    let yPos = city.cell.y * cellSize - 5\n    if (menu) {\n        stage.removeChild(menu)\n        if (menu.x == xPos && menu.y == yPos) { // same menu\n            menu = null\n            return\n        }\n    }\n    menu = new PIXI.Container();\n    menu.x = xPos\n    menu.y = yPos\n\n    let graphics = new PIXI.Graphics();\n    drawCityMenu(graphics, menu)\n\n    let movie = setupMovie('beer')\n    movie.click = (mouseData) => alert(\"CLICK Beer\");\n    menu.addChild(movie);\n    stage.addChild(menu)\n\n}\n\nfunction drawCanvas(){\n    let canvas = document.getElementById(\"stage\");\n    canvas.width=canvasWidth;\n    canvas.height=canvasHeight;\n\n    renderer = new PIXI.autoDetectRenderer(canvasWidth, canvasHeight, {\n        view: canvas, backgroundColor : 0x1099bb, antialias: true,\n        resolution: window.devicePixelRatio || 1,\n        autoResize:true});\n\n    PIXI.cocoontext.CONST.TEXT_RESOLUTION =  window.devicePixelRatio;\n\n    function drawCells(world){\n        let paddingPerSide = 0\n        sprites.container = new PIXI.Container();\n        sprites.temperatureView = new PIXI.Graphics();\n        sprites.worldView = new PIXI.Graphics();\n        sprites.elevationView = new PIXI.Graphics();\n        sprites.rainFallView = new PIXI.Graphics();\n        for (var i = 0; i < world.cells.length; i++) {\n            var cell = world.cells[i];\n            let x = paddingPerSide + cell.x * cellSize\n            let y = paddingPerSide + cell.y * cellSize\n            let type = cellTypes[cell.type]\n            drawTileRaw(sprites.worldView, type.color, cellSize, x, y)\n            drawTileRaw(sprites.temperatureView, temperatureToColor(cell.data.temperature), cellSize, x, y)\n            drawTileRaw(sprites.elevationView, elevationToColor(cell.data.elevation), cellSize, x, y)\n            drawTileRaw(sprites.rainFallView, rainfallToColor(cell.data.rainfall), cellSize, x, y)\n\n        }\n        sprites.container.addChild(sprites.worldView);\n        stage.addChild(sprites.container);\n\n        game.cities.forEach(city => {\n            let house = drawHouse('0xBB3333', Math.round(cellSize*1.5))\n            house.x = city.cell.x * cellSize\n            house.y = city.cell.y * cellSize\n            house.interactive = true\n            house.click = (mouseData) => openCityMenu(city)\n            stage.addChild(house);\n\n            var textOptions = {\n                fontFamily: 'Arial', // Set style, size and font\n                fontSize: '14px',\n                fill: 'white', // Set fill color to blue\n                align: 'center', // Center align the text, since it's multiline\n                stroke: '#34495e', // Set stroke color to a dark blue-gray color\n                strokeThickness: 3, // Set stroke thickness to 20\n                lineJoin: 'round' // Set the lineJoin to round instead of 'miter'\n            }\n            let text = new PIXI.Text(city.name ,textOptions);\n            setXY(text.anchor, 0.5);\n            text.x = city.cell.x * cellSize + 5\n            if (text.x <= 40) text.anchor.x = .1\n            if (text.x >= canvasWidth - 40) text.anchor.x = .9\n            text.y = city.cell.y * cellSize - 5\n            text.canvas.style.webkitFontSmoothing = \"antialiased\";\n            stage.addChild(text);\n        })\n\n\n        game.ships.forEach(ship => {\n            var ship1texture = PIXI.loader.resources.shipmap.texture;\n            var ship1 = new PIXI.Sprite(ship1texture);\n            ship1.interactive = true;\n            ship1.click = function(mouseData){\n                alert(\"CLICK Ship!\");\n            }\n            ship1.x = ship.position.x * cellSize\n            ship1.y = ship.position.y * cellSize\n            stage.addChild(ship1);\n        })\n\n        // world.cells.filter(cell => cell.isCity).forEach(cell => {\n            // let house = drawHouse('0xBB3333', cellSize*1.5)\n            // house.x = cell.x * cellSize\n            // house.y = cell.y * cellSize\n            // stage.addChild(house);\n\n            // var ship1texture = PIXI.loader.resources.shipmap.texture;\n            // var ship1 = new PIXI.Sprite(ship1texture);\n            // ship1.interactive = true;\n            // ship1.click = function(mouseData){\n            //    alert(\"CLICK!\");\n            // }\n            // ship1.x = cell.x * cellSize\n            // ship1.y = cell.y * cellSize\n            // stage.addChild(ship1);\n        // })\n        //\n        animate()\n\n    }\n    drawCells(world)\n    renderer.render(stage)\n\n    function animate() {\n        // render the stage container\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    }\n\n}\n\nfunction andNowDraw(el) {\n    sprites.container.removeChildren();\n    sprites.container.addChild(el);\n    renderer.render(stage)\n}\nfunction showTemperature() { andNowDraw(sprites.temperatureView)}\nfunction showMap() {andNowDraw(sprites.worldView)}\nfunction showElevation() { andNowDraw(sprites.elevationView) }\nfunction showRainFall() { andNowDraw(sprites.rainFallView) }\nfunction loadImagesAndDraw(){\n    let loader = PIXI.loader\n    loader.add(\"ship1\", \"img/shipsmall_1.jpg\")\n        .add(\"ship2\", \"img/shipmedium_1.jpg\")\n        .add(\"ship3\", \"img/shiplarge_1.jpg\")\n        .add(\"shipmap\", \"img/ship_map.png\")\n        .add('beer','img/beer/beer.json')\n        .load(drawCanvas);\n\n    new Vue({\n        el: '#money',\n        data: {\n            money: 'Hello Vue.js!'\n        }\n    })\n\n}\n\nfunction create2DArray(width, height){\n    var x = new Array(height);\n    for (var i = 0; i < height; i++) {\n        x[i] = new Array(width);\n    }\n    return x\n}\n\nfunction inRange(num, range) {\n    return num >= range[0] && num <= range[1]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./main.js"],"sourceRoot":""}